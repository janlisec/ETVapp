% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_peakdata.R
\name{get_peakdata}
\alias{get_peakdata}
\title{get_peakdata.}
\usage{
get_peakdata(
  pro_data,
  int_col,
  time_col = "Time",
  peak_start = NULL,
  peak_end = NULL,
  minpeakheight = 1000,
  PPmethod = c("Peak (height)", "Peak (manual)", "mean_signal"),
  BLmethod = c("modpolyfit", "none"),
  deg = 1,
  cf = 50
)
}
\arguments{
\item{pro_data}{Data.frame with at least two numeric columns.}

\item{int_col}{Column name of the intensity column to be used.}

\item{time_col}{Column name of the time column to be used.}

\item{peak_start}{Value which is taken as peak start point, when manual peak picking is chosen.}

\item{peak_end}{Value which is taken as peak end point, when manual peak picking is chosen.}

\item{minpeakheight}{A threshold value for peak picking via peak height.}

\item{PPmethod}{Peak picking method.}

\item{BLmethod}{Method for baseline correction.}

\item{deg}{Degree of polynomial for baseline correction.}

\item{cf}{A correction value for cutting the area around the detected peak.}
}
\value{
A data.frame with the peak boundaries in seconds and the peak area in cps
.
}
\description{
\code{get_peakdata} will generate a table with peak data (atart
    and end point, peak area) or the data of a signal range (start and end point, mean signal intensity) from a data.frame.
}
\details{
$$VS: Peak picking method "Peak (height)" returns peak max as peak start and end.

This function provides a simple detection algorithm for peak boundaries
    based on the peak height and alternatively allows for manual setting of the
    peak boundaries or selecting a signal range. It has implemented a method for baseline correction based on
    polynomial fitting and will compute the peak area using the trapezoidal rule.
}
\examples{
raw_data <- ETVapp::ETVapp_testdata[["oIDMS"]][["Samples"]][[1]]
pro_data <- process_data(raw_data, c1 = "117Sn", c2 = "80Se", fl = 151)
peak_data <- get_peakdata(pro_data, int_col = "117Sn", peak_start = 80, peak_end = 130)
plot(x = pro_data[,1:2], type = "l")
abline(v = peak_data[1,2:3], col=grey(0.7))

}
